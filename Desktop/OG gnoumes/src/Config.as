package 
{
	/**
	 * ...
	 * @author 
	 */
	public class Config 
	{
		
		public static const CONFIG:String = '<?xml version="1.0" encoding="utf-8"?><flex-config><target-player>11.0</target-player><benchmark>false</benchmark><static-link-runtime-shared-libraries>true</static-link-runtime-shared-libraries><compiler><define append="true"><name>CONFIG::debug</name><value>false</value></define><define append="true"><name>CONFIG::release</name><value>true</value></define><define append="true"><name>CONFIG::timeStamp</name><value>[date]</value></define><define append="true"><name>CONFIG::air</name><value>false</value></define><define append="true"><name>CONFIG::mobile</name><value>false</value></define><define append="true"><name>CONFIG::desktop</name><value>false</value></define><optimize>true</optimize><omit-trace-statements>true</omit-trace-statements><verbose-stacktraces>false</verbose-stacktraces><source-path append="true"><path-element>[path]</path-element></source-path></compiler><file-specs><path-element>[class]</path-element></file-specs><default-background-color>#FFFFFF</default-background-color><default-frame-rate>30</default-frame-rate><default-size><width>300</width><height>300</height></default-size></flex-config>';
		
		public static const PROJ:String = '<?xml version="1.0" encoding="utf-8"?>\n<project version="2">\n\t<!-- Output SWF options -->\n\t<output>\n\t\t<movie outputType="Application" />\n\t\t<movie input="" />\n\t\t<movie path="[path]" />\n\t\t<movie fps="30" />\n\t\t<movie width="300" />\n\t\t<movie height="300" />\n\t\t<movie version="14" />\n\t\t<movie minorVersion="0" />\n\t\t<movie platform="Flash Player" />\n\t\t<movie background="#FFFFFF" />\n\t</output>\n\t<!-- Other classes to be compiled into your SWF -->\n\t<classpaths>\n\t\t<class path="src" />\n\t</classpaths>\n\t<!-- Build options -->\n\t<build>\n\t\t<option accessible="False" />\n\t\t<option advancedTelemetry="False" />\n\t\t<option allowSourcePathOverlap="False" />\n\t\t<option benchmark="False" />\n\t\t<option es="False" />\n\t\t<option inline="False" />\n\t\t<option locale="" />\n\t\t<option loadConfig="" />\n\t\t<option optimize="True" />\n\t\t<option omitTraces="True" />\n\t\t<option showActionScriptWarnings="True" />\n\t\t<option showBindingWarnings="True" />\n\t\t<option showInvalidCSS="True" />\n\t\t<option showDeprecationWarnings="True" />\n\t\t<option showUnusedTypeSelectorWarnings="True" />\n\t\t<option strict="True" />\n\t\t<option useNetwork="True" />\n\t\t<option useResourceBundleMetadata="True" />\n\t\t<option warnings="True" />\n\t\t<option verboseStackTraces="False" />\n\t\t<option linkReport="" />\n\t\t<option loadExterns="" />\n\t\t<option staticLinkRSL="True" />\n\t\t<option additional="" />\n\t\t<option compilerConstants="" />\n\t\t<option minorVersion="" />\n\t</build>\n\t<!-- SWC Include Libraries -->\n\t<includeLibraries>\n\t\t<!-- example: <element path="..." /> -->\n\t</includeLibraries>\n\t<!-- SWC Libraries -->\n\t<libraryPaths>\n\t\t<!-- example: <element path="..." /> -->\n\t</libraryPaths>\n\t<!-- External Libraries -->\n\t<externalLibraryPaths>\n\t\t<!-- example: <element path="..." /> -->\n\t</externalLibraryPaths>\n\t<!-- Runtime Shared Libraries -->\n\t<rslPaths>\n\t\t<!-- example: <element path="..." /> -->\n\t</rslPaths>\n\t<!-- Intrinsic Libraries -->\n\t<intrinsics>\n\t\t<!-- example: <element path="..." /> -->\n\t</intrinsics>\n\t<!-- Assets to embed into the output SWF -->\n\t<library>\n\t\t<!-- example: <asset path="..." id="..." update="..." glyphs="..." mode="..." place="..." sharepoint="..." /> -->\n\t</library>\n\t<!-- Class files to compile (other referenced classes will automatically be included) -->\n\t<compileTargets>\n\t\t<compile path="[class]" />\n\t</compileTargets>\n\t<!-- Paths to exclude from the Project Explorer tree -->\n\t<hiddenPaths>\n\t\t<hidden path="obj" />\n\t</hiddenPaths>\n\t<!-- Executed before build -->\n\t<preBuildCommand />\n\t<!-- Executed after build -->\n\t<postBuildCommand alwaysRun="False" />\n\t<!-- Other project options -->\n\t<options>\n\t\t<option showHiddenPaths="False" />\n\t\t<option testMovie="Default" />\n\t\t<option testMovieCommand="" />\n\t</options>\n\t<!-- Plugin storage -->\n\t<storage>\n\t\t<entry key="at_enabled"><![CDATA[0]]></entry>\n\t\t<entry key="at_password"><![CDATA[]]></entry>\n\t</storage>\n</project>';
		
		public static const MAIN:String = 'package \n{\n\timport flash.display.Sprite;\n\timport flash.system.Security;\n\timport flash.display.BitmapData;\n\t\n\tpublic class {name} extends Sprite \n\t{\n\t\tSecurity.allowDomain("*");\n\t\tSecurity.allowInsecureDomain("*");\n\t\t\n\t\t\n\t\t{include}\n\t\t\n\t\t{levels}\n\t\t\n\t\t{points}\n\t\t\n\t\t\n\t\tpublic var animation:Animation = {animation};\n\t\t\n\t\tpublic function {name}() { }\n\t\t\n\t\tpublic function getLevel(level:int = 0):Object\n\t\t{\n\t\t\treturn sprites[level];\n\t\t}\n\t}\n}';
		
		public static const ANIM:String = 'package \n{\n\timport flash.display.BitmapData;\n\timport flash.geom.Point;\n\timport flash.geom.Rectangle;\n\t\n\tpublic class Animation \n\t{\n\t\tpublic var shadow:Object = { };\n\t\tpublic var animations:Object = { };\n\t\tpublic var frames:Array;\n\t\t\n\t\tpublic var ax:int = {ax};\n\t\tpublic var ay:int = {ay};\n\t\t\n\t\t{include}\n\t\t\n\t\tpublic function Animation(){\n\t\t\t\n\t\t\t{animations}\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic function getFrames(animations:Array, atlas:BitmapData):Array\n\t\t{\n\t\t\tconst pt:Point = new Point(0, 0);\n\t\t\tvar frame:Object;\n\t\t\tvar bmd:BitmapData;\n\t\t\tvar data:Array = [];\n\t\t\tfor (var index:* in animations)\n\t\t\t{\n\t\t\t\tframe = animations[index];\n\t\t\t\tbmd = new BitmapData(frame.w, frame.h);\n\t\t\t\t\n\t\t\t\tbmd.copyPixels(atlas, new Rectangle(frame.x, frame.y, frame.w, frame.h), pt);\n\t\t\t\tdata.push( { bmd:bmd, ox:frame.ox, oy:frame.oy} );\n\t\t\t}\n\t\t\treturn data;\n\t\t}\n\t}\n}';
		
		public static const MAIN_NO_IMPORT:String = 'package \n{\n\timport flash.display.Sprite;\n\timport flash.system.Security;\n\t\n\tpublic class {name} extends Sprite \n\t{\n\t\tSecurity.allowDomain("*");\n\t\tSecurity.allowInsecureDomain("*");\n\t\t\n\t\t{levels}\n\t\t{points}\n\t\t{animation}\n\t\t\n\t\tpublic function {name}() { }\n\t\t\n\t}\n}';
		
		public static const IMPORT:String = 'package \n{\n\timport flash.display.Sprite;\n\timport flash.system.Security;\n\timport flash.display.BitmapData;\n\t\n\tpublic class {name} extends Sprite \n\t{\n\t\tSecurity.allowDomain("*");\n\t\tSecurity.allowInsecureDomain("*");\n\t\t\n\t\t{include}\n\t\t\n\t\tpublic function {name}() {}\n\t}\n}';
		
	}

}